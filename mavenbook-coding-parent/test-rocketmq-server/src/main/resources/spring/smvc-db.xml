<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig"
		init-method="init">
		<property name="dir" value="META-INF/druid/wall/mysql" />
		<!-- <property name="dir" value="META-INF/druid/wall/oracle" /> -->
		<property name="selectIntoAllow" value="false" />
		<property name="deleteAllow" value="false" />
		<property name="updateAllow" value="false" />
		<property name="insertAllow" value="false" />
		<property name="mergeAllow" value="false" />
	</bean>

	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<!-- <property name="dbType" value="oracle" /> -->
		<property name="config" ref="wall-filter-config" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<property name="maxActive" value="${jdbc_maxActive}" />
		<property name="initialSize" value="${jdbc_initialSize}" />
		<property name="maxWait" value="${jdbc_maxWait}" />
		<property name="minIdle" value="${jdbc_minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc_timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc_minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc_validationQuery}" />
		<property name="testWhileIdle" value="${jdbc_testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc_testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc_testOnReturn}" />
		<property name="poolPreparedStatements" value="${jdbc_poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc_maxOpenPreparedStatements}" />
		<property name="filters" value="stat,config,wall" />
		<property name="proxyFilters">
			<list>
				<ref bean="wall-filter" />
			</list>
		</property>
		<property name="connectionProperties"
			value="config.decrypt=true;wall.selectIntoAllow=false;wall.deleteAllow=false;wall.updateAllow=false;wall.insertAllow=false;wall.mergeAllow=false" />
	</bean>
	<!-- <bean id="swappableDataSource" class="org.springframework.aop.target.HotSwappableTargetSource">
		<constructor-arg>
			<ref local="dataSource" />
		</constructor-arg>
	</bean>
	<bean id="swappable" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource">
			<ref local="swappableDataSource" />
		</property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="swappable" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="swappable"></property>
	</bean> -->
</beans>