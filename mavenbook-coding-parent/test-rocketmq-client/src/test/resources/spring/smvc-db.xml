<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<property name="maxActive" value="${jdbc_maxActive}" />
		<property name="initialSize" value="${jdbc_initialSize}" />
		<property name="maxWait" value="${jdbc_maxWait}" />
		<property name="minIdle" value="${jdbc_minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc_timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc_minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc_validationQuery}" />
		<property name="testWhileIdle" value="${jdbc_testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc_testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc_testOnReturn}" />
		<property name="poolPreparedStatements" value="${jdbc_poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc_maxOpenPreparedStatements}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="org.jobshen.model" />
		<property name="typeHandlersPackage" value="org.jobshen.commons.mybatis.typehandler.handlers" />
	</bean>


	<!-- <bean id="swappableDataSource" class="org.springframework.aop.target.HotSwappableTargetSource"> 
		<constructor-arg> <ref local="dataSource" /> </constructor-arg> </bean> <bean 
		id="swappable" class="org.springframework.aop.framework.ProxyFactoryBean"> 
		<property name="targetSource"> <ref local="swappableDataSource" /> </property> 
		</bean> <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="swappable" /> </bean> <bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="swappable"></property> </bean> -->
</beans>